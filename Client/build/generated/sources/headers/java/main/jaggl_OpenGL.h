/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class jaggl_OpenGL */

#ifndef _Included_jaggl_OpenGL
#define _Included_jaggl_OpenGL
#ifdef __cplusplus
extern "C" {
#endif
#undef jaggl_OpenGL_anInt904
#define jaggl_OpenGL_anInt904 5120L
#undef jaggl_OpenGL_anInt905
#define jaggl_OpenGL_anInt905 5121L
#undef jaggl_OpenGL_anInt906
#define jaggl_OpenGL_anInt906 5122L
#undef jaggl_OpenGL_anInt907
#define jaggl_OpenGL_anInt907 5123L
#undef jaggl_OpenGL_anInt908
#define jaggl_OpenGL_anInt908 5124L
#undef jaggl_OpenGL_anInt909
#define jaggl_OpenGL_anInt909 5125L
#undef jaggl_OpenGL_anInt910
#define jaggl_OpenGL_anInt910 5126L
#undef jaggl_OpenGL_anInt911
#define jaggl_OpenGL_anInt911 0L
#undef jaggl_OpenGL_anInt912
#define jaggl_OpenGL_anInt912 1L
#undef jaggl_OpenGL_anInt913
#define jaggl_OpenGL_anInt913 2L
#undef jaggl_OpenGL_anInt914
#define jaggl_OpenGL_anInt914 3L
#undef jaggl_OpenGL_anInt915
#define jaggl_OpenGL_anInt915 4L
#undef jaggl_OpenGL_anInt916
#define jaggl_OpenGL_anInt916 5L
#undef jaggl_OpenGL_anInt917
#define jaggl_OpenGL_anInt917 6L
#undef jaggl_OpenGL_anInt918
#define jaggl_OpenGL_anInt918 7L
#undef jaggl_OpenGL_anInt919
#define jaggl_OpenGL_anInt919 5888L
#undef jaggl_OpenGL_anInt920
#define jaggl_OpenGL_anInt920 5889L
#undef jaggl_OpenGL_anInt921
#define jaggl_OpenGL_anInt921 5890L
#undef jaggl_OpenGL_anInt922
#define jaggl_OpenGL_anInt922 2832L
#undef jaggl_OpenGL_anInt923
#define jaggl_OpenGL_anInt923 2834L
#undef jaggl_OpenGL_anInt924
#define jaggl_OpenGL_anInt924 6913L
#undef jaggl_OpenGL_anInt925
#define jaggl_OpenGL_anInt925 6914L
#undef jaggl_OpenGL_anInt926
#define jaggl_OpenGL_anInt926 1028L
#undef jaggl_OpenGL_anInt927
#define jaggl_OpenGL_anInt927 1029L
#undef jaggl_OpenGL_anInt928
#define jaggl_OpenGL_anInt928 2884L
#undef jaggl_OpenGL_anInt929
#define jaggl_OpenGL_anInt929 4864L
#undef jaggl_OpenGL_anInt930
#define jaggl_OpenGL_anInt930 515L
#undef jaggl_OpenGL_anInt931
#define jaggl_OpenGL_anInt931 516L
#undef jaggl_OpenGL_anInt932
#define jaggl_OpenGL_anInt932 2929L
#undef jaggl_OpenGL_anInt933
#define jaggl_OpenGL_anInt933 6402L
#undef jaggl_OpenGL_anInt934
#define jaggl_OpenGL_anInt934 2896L
#undef jaggl_OpenGL_anInt935
#define jaggl_OpenGL_anInt935 16384L
#undef jaggl_OpenGL_anInt936
#define jaggl_OpenGL_anInt936 16385L
#undef jaggl_OpenGL_anInt937
#define jaggl_OpenGL_anInt937 16386L
#undef jaggl_OpenGL_anInt938
#define jaggl_OpenGL_anInt938 4615L
#undef jaggl_OpenGL_anInt939
#define jaggl_OpenGL_anInt939 4616L
#undef jaggl_OpenGL_anInt940
#define jaggl_OpenGL_anInt940 4617L
#undef jaggl_OpenGL_anInt941
#define jaggl_OpenGL_anInt941 4608L
#undef jaggl_OpenGL_anInt942
#define jaggl_OpenGL_anInt942 4609L
#undef jaggl_OpenGL_anInt943
#define jaggl_OpenGL_anInt943 4611L
#undef jaggl_OpenGL_anInt944
#define jaggl_OpenGL_anInt944 5634L
#undef jaggl_OpenGL_anInt945
#define jaggl_OpenGL_anInt945 2899L
#undef jaggl_OpenGL_anInt946
#define jaggl_OpenGL_anInt946 1032L
#undef jaggl_OpenGL_anInt947
#define jaggl_OpenGL_anInt947 7425L
#undef jaggl_OpenGL_anInt948
#define jaggl_OpenGL_anInt948 2903L
#undef jaggl_OpenGL_anInt949
#define jaggl_OpenGL_anInt949 260L
#undef jaggl_OpenGL_anInt950
#define jaggl_OpenGL_anInt950 3008L
#undef jaggl_OpenGL_anInt951
#define jaggl_OpenGL_anInt951 3042L
#undef jaggl_OpenGL_anInt952
#define jaggl_OpenGL_anInt952 0L
#undef jaggl_OpenGL_anInt953
#define jaggl_OpenGL_anInt953 1L
#undef jaggl_OpenGL_anInt954
#define jaggl_OpenGL_anInt954 768L
#undef jaggl_OpenGL_anInt955
#define jaggl_OpenGL_anInt955 769L
#undef jaggl_OpenGL_anInt956
#define jaggl_OpenGL_anInt956 770L
#undef jaggl_OpenGL_anInt957
#define jaggl_OpenGL_anInt957 771L
#undef jaggl_OpenGL_anInt958
#define jaggl_OpenGL_anInt958 774L
#undef jaggl_OpenGL_anInt959
#define jaggl_OpenGL_anInt959 2912L
#undef jaggl_OpenGL_anInt960
#define jaggl_OpenGL_anInt960 2917L
#undef jaggl_OpenGL_anInt961
#define jaggl_OpenGL_anInt961 2914L
#undef jaggl_OpenGL_anInt962
#define jaggl_OpenGL_anInt962 2918L
#undef jaggl_OpenGL_anInt963
#define jaggl_OpenGL_anInt963 2915L
#undef jaggl_OpenGL_anInt964
#define jaggl_OpenGL_anInt964 2916L
#undef jaggl_OpenGL_anInt965
#define jaggl_OpenGL_anInt965 9729L
#undef jaggl_OpenGL_anInt966
#define jaggl_OpenGL_anInt966 7681L
#undef jaggl_OpenGL_anInt967
#define jaggl_OpenGL_anInt967 6406L
#undef jaggl_OpenGL_anInt968
#define jaggl_OpenGL_anInt968 6409L
#undef jaggl_OpenGL_anInt969
#define jaggl_OpenGL_anInt969 6410L
#undef jaggl_OpenGL_anInt970
#define jaggl_OpenGL_anInt970 6144L
#undef jaggl_OpenGL_anInt971
#define jaggl_OpenGL_anInt971 6407L
#undef jaggl_OpenGL_anInt972
#define jaggl_OpenGL_anInt972 6408L
#undef jaggl_OpenGL_anInt973
#define jaggl_OpenGL_anInt973 2982L
#undef jaggl_OpenGL_anInt974
#define jaggl_OpenGL_anInt974 3156L
#undef jaggl_OpenGL_anInt975
#define jaggl_OpenGL_anInt975 4353L
#undef jaggl_OpenGL_anInt976
#define jaggl_OpenGL_anInt976 3089L
#undef jaggl_OpenGL_anInt977
#define jaggl_OpenGL_anInt977 3348L
#undef jaggl_OpenGL_anInt978
#define jaggl_OpenGL_anInt978 3349L
#undef jaggl_OpenGL_anInt979
#define jaggl_OpenGL_anInt979 3352L
#undef jaggl_OpenGL_anInt980
#define jaggl_OpenGL_anInt980 3353L
#undef jaggl_OpenGL_anInt981
#define jaggl_OpenGL_anInt981 3354L
#undef jaggl_OpenGL_anInt982
#define jaggl_OpenGL_anInt982 3355L
#undef jaggl_OpenGL_anInt983
#define jaggl_OpenGL_anInt983 3317L
#undef jaggl_OpenGL_anInt984
#define jaggl_OpenGL_anInt984 3314L
#undef jaggl_OpenGL_anInt985
#define jaggl_OpenGL_anInt985 8960L
#undef jaggl_OpenGL_anInt986
#define jaggl_OpenGL_anInt986 8704L
#undef jaggl_OpenGL_anInt987
#define jaggl_OpenGL_anInt987 3552L
#undef jaggl_OpenGL_anInt988
#define jaggl_OpenGL_anInt988 3553L
#undef jaggl_OpenGL_anInt989
#define jaggl_OpenGL_anInt989 10242L
#undef jaggl_OpenGL_anInt990
#define jaggl_OpenGL_anInt990 10243L
#undef jaggl_OpenGL_anInt991
#define jaggl_OpenGL_anInt991 10240L
#undef jaggl_OpenGL_anInt992
#define jaggl_OpenGL_anInt992 10241L
#undef jaggl_OpenGL_anInt993
#define jaggl_OpenGL_anInt993 8705L
#undef jaggl_OpenGL_anInt994
#define jaggl_OpenGL_anInt994 3168L
#undef jaggl_OpenGL_anInt995
#define jaggl_OpenGL_anInt995 3169L
#undef jaggl_OpenGL_anInt996
#define jaggl_OpenGL_anInt996 9472L
#undef jaggl_OpenGL_anInt997
#define jaggl_OpenGL_anInt997 9984L
#undef jaggl_OpenGL_anInt998
#define jaggl_OpenGL_anInt998 9987L
#undef jaggl_OpenGL_anInt999
#define jaggl_OpenGL_anInt999 9217L
#undef jaggl_OpenGL_anInt1000
#define jaggl_OpenGL_anInt1000 9473L
#undef jaggl_OpenGL_anInt1001
#define jaggl_OpenGL_anInt1001 9216L
#undef jaggl_OpenGL_anInt1002
#define jaggl_OpenGL_anInt1002 9474L
#undef jaggl_OpenGL_anInt1003
#define jaggl_OpenGL_anInt1003 8448L
#undef jaggl_OpenGL_anInt1004
#define jaggl_OpenGL_anInt1004 9728L
#undef jaggl_OpenGL_anInt1005
#define jaggl_OpenGL_anInt1005 10497L
#undef jaggl_OpenGL_anInt1006
#define jaggl_OpenGL_anInt1006 8192L
#undef jaggl_OpenGL_anInt1007
#define jaggl_OpenGL_anInt1007 8193L
#undef jaggl_OpenGL_anInt1008
#define jaggl_OpenGL_anInt1008 8194L
#undef jaggl_OpenGL_anInt1009
#define jaggl_OpenGL_anInt1009 8195L
#undef jaggl_OpenGL_anInt1010
#define jaggl_OpenGL_anInt1010 3170L
#undef jaggl_OpenGL_anInt1011
#define jaggl_OpenGL_anInt1011 3171L
#undef jaggl_OpenGL_anInt1012
#define jaggl_OpenGL_anInt1012 7936L
#undef jaggl_OpenGL_anInt1013
#define jaggl_OpenGL_anInt1013 7937L
#undef jaggl_OpenGL_anInt1014
#define jaggl_OpenGL_anInt1014 7938L
#undef jaggl_OpenGL_anInt1015
#define jaggl_OpenGL_anInt1015 7939L
#undef jaggl_OpenGL_anInt1016
#define jaggl_OpenGL_anInt1016 256L
#undef jaggl_OpenGL_anInt1017
#define jaggl_OpenGL_anInt1017 1024L
#undef jaggl_OpenGL_anInt1018
#define jaggl_OpenGL_anInt1018 2048L
#undef jaggl_OpenGL_anInt1019
#define jaggl_OpenGL_anInt1019 16384L
#undef jaggl_OpenGL_anInt1020
#define jaggl_OpenGL_anInt1020 32830L
#undef jaggl_OpenGL_anInt1021
#define jaggl_OpenGL_anInt1021 32834L
#undef jaggl_OpenGL_anInt1022
#define jaggl_OpenGL_anInt1022 32852L
#undef jaggl_OpenGL_anInt1023
#define jaggl_OpenGL_anInt1023 32859L
#undef jaggl_OpenGL_anInt1024
#define jaggl_OpenGL_anInt1024 32884L
#undef jaggl_OpenGL_anInt1025
#define jaggl_OpenGL_anInt1025 32885L
#undef jaggl_OpenGL_anInt1026
#define jaggl_OpenGL_anInt1026 32886L
#undef jaggl_OpenGL_anInt1027
#define jaggl_OpenGL_anInt1027 32888L
#undef jaggl_OpenGL_anInt1028
#define jaggl_OpenGL_anInt1028 32879L
#undef jaggl_OpenGL_anInt1029
#define jaggl_OpenGL_anInt1029 33639L
#undef jaggl_OpenGL_anInt1030
#define jaggl_OpenGL_anInt1030 32993L
#undef jaggl_OpenGL_anInt1031
#define jaggl_OpenGL_anInt1031 33071L
#undef jaggl_OpenGL_anInt1032
#define jaggl_OpenGL_anInt1032 33984L
#undef jaggl_OpenGL_anInt1033
#define jaggl_OpenGL_anInt1033 33985L
#undef jaggl_OpenGL_anInt1034
#define jaggl_OpenGL_anInt1034 34018L
#undef jaggl_OpenGL_anInt1035
#define jaggl_OpenGL_anInt1035 32925L
#undef jaggl_OpenGL_anInt1036
#define jaggl_OpenGL_anInt1036 32926L
#undef jaggl_OpenGL_anInt1037
#define jaggl_OpenGL_anInt1037 34065L
#undef jaggl_OpenGL_anInt1038
#define jaggl_OpenGL_anInt1038 34066L
#undef jaggl_OpenGL_anInt1039
#define jaggl_OpenGL_anInt1039 34067L
#undef jaggl_OpenGL_anInt1040
#define jaggl_OpenGL_anInt1040 34069L
#undef jaggl_OpenGL_anInt1041
#define jaggl_OpenGL_anInt1041 34070L
#undef jaggl_OpenGL_anInt1042
#define jaggl_OpenGL_anInt1042 34071L
#undef jaggl_OpenGL_anInt1043
#define jaggl_OpenGL_anInt1043 34072L
#undef jaggl_OpenGL_anInt1044
#define jaggl_OpenGL_anInt1044 34073L
#undef jaggl_OpenGL_anInt1045
#define jaggl_OpenGL_anInt1045 34074L
#undef jaggl_OpenGL_anInt1046
#define jaggl_OpenGL_anInt1046 34160L
#undef jaggl_OpenGL_anInt1047
#define jaggl_OpenGL_anInt1047 34161L
#undef jaggl_OpenGL_anInt1048
#define jaggl_OpenGL_anInt1048 34162L
#undef jaggl_OpenGL_anInt1049
#define jaggl_OpenGL_anInt1049 34176L
#undef jaggl_OpenGL_anInt1050
#define jaggl_OpenGL_anInt1050 34178L
#undef jaggl_OpenGL_anInt1051
#define jaggl_OpenGL_anInt1051 34184L
#undef jaggl_OpenGL_anInt1052
#define jaggl_OpenGL_anInt1052 34186L
#undef jaggl_OpenGL_anInt1053
#define jaggl_OpenGL_anInt1053 34192L
#undef jaggl_OpenGL_anInt1054
#define jaggl_OpenGL_anInt1054 34200L
#undef jaggl_OpenGL_anInt1055
#define jaggl_OpenGL_anInt1055 34163L
#undef jaggl_OpenGL_anInt1056
#define jaggl_OpenGL_anInt1056 34165L
#undef jaggl_OpenGL_anInt1057
#define jaggl_OpenGL_anInt1057 34023L
#undef jaggl_OpenGL_anInt1058
#define jaggl_OpenGL_anInt1058 34166L
#undef jaggl_OpenGL_anInt1059
#define jaggl_OpenGL_anInt1059 34167L
#undef jaggl_OpenGL_anInt1060
#define jaggl_OpenGL_anInt1060 34168L
#undef jaggl_OpenGL_anInt1061
#define jaggl_OpenGL_anInt1061 34479L
#undef jaggl_OpenGL_anInt1062
#define jaggl_OpenGL_anInt1062 33189L
#undef jaggl_OpenGL_anInt1063
#define jaggl_OpenGL_anInt1063 33190L
#undef jaggl_OpenGL_anInt1064
#define jaggl_OpenGL_anInt1064 33191L
#undef jaggl_OpenGL_anInt1065
#define jaggl_OpenGL_anInt1065 34895L
#undef jaggl_OpenGL_anInt1066
#define jaggl_OpenGL_anInt1066 35000L
#undef jaggl_OpenGL_anInt1067
#define jaggl_OpenGL_anInt1067 35001L
#undef jaggl_OpenGL_anInt1068
#define jaggl_OpenGL_anInt1068 35041L
#undef jaggl_OpenGL_anInt1069
#define jaggl_OpenGL_anInt1069 34466L
#undef jaggl_OpenGL_anInt1070
#define jaggl_OpenGL_anInt1070 34467L
#undef jaggl_OpenGL_anInt1071
#define jaggl_OpenGL_anInt1071 34929L
#undef jaggl_OpenGL_anInt1072
#define jaggl_OpenGL_anInt1072 34930L
#undef jaggl_OpenGL_anInt1073
#define jaggl_OpenGL_anInt1073 35632L
#undef jaggl_OpenGL_anInt1074
#define jaggl_OpenGL_anInt1074 35633L
#undef jaggl_OpenGL_anInt1075
#define jaggl_OpenGL_anInt1075 35724L
#undef jaggl_OpenGL_anInt1076
#define jaggl_OpenGL_anInt1076 35051L
#undef jaggl_OpenGL_anInt1077
#define jaggl_OpenGL_anInt1077 34336L
#undef jaggl_OpenGL_anInt1078
#define jaggl_OpenGL_anInt1078 34379L
#undef jaggl_OpenGL_anInt1079
#define jaggl_OpenGL_anInt1079 34933L
#undef jaggl_OpenGL_anInt1080
#define jaggl_OpenGL_anInt1080 34820L
#undef jaggl_OpenGL_anInt1081
#define jaggl_OpenGL_anInt1081 34962L
#undef jaggl_OpenGL_anInt1082
#define jaggl_OpenGL_anInt1082 34963L
#undef jaggl_OpenGL_anInt1083
#define jaggl_OpenGL_anInt1083 35040L
#undef jaggl_OpenGL_anInt1084
#define jaggl_OpenGL_anInt1084 35044L
#undef jaggl_OpenGL_anInt1085
#define jaggl_OpenGL_anInt1085 35713L
#undef jaggl_OpenGL_anInt1086
#define jaggl_OpenGL_anInt1086 35714L
#undef jaggl_OpenGL_anInt1087
#define jaggl_OpenGL_anInt1087 35716L
#undef jaggl_OpenGL_anInt1088
#define jaggl_OpenGL_anInt1088 35633L
#undef jaggl_OpenGL_anInt1089
#define jaggl_OpenGL_anInt1089 35632L
#undef jaggl_OpenGL_anInt1090
#define jaggl_OpenGL_anInt1090 34037L
#undef jaggl_OpenGL_anInt1091
#define jaggl_OpenGL_anInt1091 5131L
#undef jaggl_OpenGL_anInt1092
#define jaggl_OpenGL_anInt1092 34836L
#undef jaggl_OpenGL_anInt1093
#define jaggl_OpenGL_anInt1093 34837L
#undef jaggl_OpenGL_anInt1094
#define jaggl_OpenGL_anInt1094 34838L
#undef jaggl_OpenGL_anInt1095
#define jaggl_OpenGL_anInt1095 34840L
#undef jaggl_OpenGL_anInt1096
#define jaggl_OpenGL_anInt1096 34841L
#undef jaggl_OpenGL_anInt1097
#define jaggl_OpenGL_anInt1097 34842L
#undef jaggl_OpenGL_anInt1098
#define jaggl_OpenGL_anInt1098 34843L
#undef jaggl_OpenGL_anInt1099
#define jaggl_OpenGL_anInt1099 34844L
#undef jaggl_OpenGL_anInt1100
#define jaggl_OpenGL_anInt1100 34846L
#undef jaggl_OpenGL_anInt1101
#define jaggl_OpenGL_anInt1101 34847L
#undef jaggl_OpenGL_anInt1102
#define jaggl_OpenGL_anInt1102 33777L
#undef jaggl_OpenGL_anInt1103
#define jaggl_OpenGL_anInt1103 33779L
#undef jaggl_OpenGL_anInt1104
#define jaggl_OpenGL_anInt1104 36053L
#undef jaggl_OpenGL_anInt1105
#define jaggl_OpenGL_anInt1105 36064L
#undef jaggl_OpenGL_anInt1106
#define jaggl_OpenGL_anInt1106 36096L
#undef jaggl_OpenGL_anInt1107
#define jaggl_OpenGL_anInt1107 36160L
#undef jaggl_OpenGL_anInt1108
#define jaggl_OpenGL_anInt1108 36161L
#undef jaggl_OpenGL_anInt1109
#define jaggl_OpenGL_anInt1109 36008L
#undef jaggl_OpenGL_anInt1110
#define jaggl_OpenGL_anInt1110 36219L
#undef jaggl_OpenGL_anInt1111
#define jaggl_OpenGL_anInt1111 37143L
#undef jaggl_OpenGL_anInt1112
#define jaggl_OpenGL_anInt1112 37147L
#undef jaggl_OpenGL_anInt1113
#define jaggl_OpenGL_anInt1113 37149L
/*
 * Class:     jaggl_OpenGL
 * Method:    init
 * Signature: (Ljava/awt/Canvas;IIIIII)J
 */
JNIEXPORT jlong JNICALL Java_jaggl_OpenGL_init
  (JNIEnv *, jobject, jobject, jint, jint, jint, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    attachPeer
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_jaggl_OpenGL_attachPeer
  (JNIEnv *, jobject);

/*
 * Class:     jaggl_OpenGL
 * Method:    detachPeer
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_detachPeer
  (JNIEnv *, jobject);

/*
 * Class:     jaggl_OpenGL
 * Method:    prepareSurface
 * Signature: (Ljava/awt/Canvas;)J
 */
JNIEXPORT jlong JNICALL Java_jaggl_OpenGL_prepareSurface
  (JNIEnv *, jobject, jobject);

/*
 * Class:     jaggl_OpenGL
 * Method:    surfaceResized
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_surfaceResized
  (JNIEnv *, jobject, jlong);

/*
 * Class:     jaggl_OpenGL
 * Method:    releaseSurface
 * Signature: (Ljava/awt/Canvas;J)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_releaseSurface
  (JNIEnv *, jobject, jobject, jlong);

/*
 * Class:     jaggl_OpenGL
 * Method:    setSurface
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_jaggl_OpenGL_setSurface
  (JNIEnv *, jobject, jlong);

/*
 * Class:     jaggl_OpenGL
 * Method:    swapBuffers
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_swapBuffers
  (JNIEnv *, jobject, jlong);

/*
 * Class:     jaggl_OpenGL
 * Method:    setSwapInterval
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_setSwapInterval
  (JNIEnv *, jobject, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    release
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_release
  (JNIEnv *, jobject);

/*
 * Class:     jaggl_OpenGL
 * Method:    glEnable
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glEnable
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDisable
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDisable
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glCullFace
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glCullFace
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glPushAttrib
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glPushAttrib
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glPopAttrib
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glPopAttrib
  (JNIEnv *, jclass);

/*
 * Class:     jaggl_OpenGL
 * Method:    glShadeModel
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glShadeModel
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glHint
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glHint
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glFinish
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glFinish
  (JNIEnv *, jclass);

/*
 * Class:     jaggl_OpenGL
 * Method:    glFlush
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glFlush
  (JNIEnv *, jclass);

/*
 * Class:     jaggl_OpenGL
 * Method:    glClear
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glClear
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glClearColor
 * Signature: (FFFF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glClearColor
  (JNIEnv *, jclass, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glClearDepth
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glClearDepth
  (JNIEnv *, jclass, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDepthFunc
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDepthFunc
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDepthMask
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDepthMask
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDepthRange
 * Signature: (FF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDepthRange
  (JNIEnv *, jclass, jfloat, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glAlphaFunc
 * Signature: (IF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glAlphaFunc
  (JNIEnv *, jclass, jint, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glColorMask
 * Signature: (ZZZZ)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glColorMask
  (JNIEnv *, jclass, jboolean, jboolean, jboolean, jboolean);

/*
 * Class:     jaggl_OpenGL
 * Method:    glReadBuffer
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glReadBuffer
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDrawBuffer
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDrawBuffer
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDrawBuffersARB
 * Signature: (I[II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDrawBuffersARB
  (JNIEnv *, jclass, jint, jintArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glMatrixMode
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glMatrixMode
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glPushMatrix
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glPushMatrix
  (JNIEnv *, jclass);

/*
 * Class:     jaggl_OpenGL
 * Method:    glPopMatrix
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glPopMatrix
  (JNIEnv *, jclass);

/*
 * Class:     jaggl_OpenGL
 * Method:    glLoadIdentity
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glLoadIdentity
  (JNIEnv *, jclass);

/*
 * Class:     jaggl_OpenGL
 * Method:    glOrtho
 * Signature: (DDDDDD)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glOrtho
  (JNIEnv *, jclass, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     jaggl_OpenGL
 * Method:    glFrustum
 * Signature: (DDDDDD)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glFrustum
  (JNIEnv *, jclass, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTranslatef
 * Signature: (FFF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTranslatef
  (JNIEnv *, jclass, jfloat, jfloat, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glRotatef
 * Signature: (FFFF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glRotatef
  (JNIEnv *, jclass, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glScalef
 * Signature: (FFF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glScalef
  (JNIEnv *, jclass, jfloat, jfloat, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glLoadMatrixf
 * Signature: ([FI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glLoadMatrixf
  (JNIEnv *, jclass, jfloatArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glMultMatrixf
 * Signature: ([FI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glMultMatrixf
  (JNIEnv *, jclass, jfloatArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glViewport
 * Signature: (IIII)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glViewport
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glScissor
 * Signature: (IIII)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glScissor
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGenLists
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_jaggl_OpenGL_glGenLists
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDeleteLists
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDeleteLists
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glNewList
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glNewList
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glEndList
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glEndList
  (JNIEnv *, jclass);

/*
 * Class:     jaggl_OpenGL
 * Method:    glCallList
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glCallList
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glBegin
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glBegin
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glVertex2i
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glVertex2i
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glVertex2f
 * Signature: (FF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glVertex2f
  (JNIEnv *, jclass, jfloat, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glVertex3f
 * Signature: (FFF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glVertex3f
  (JNIEnv *, jclass, jfloat, jfloat, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glNormal3f
 * Signature: (FFF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glNormal3f
  (JNIEnv *, jclass, jfloat, jfloat, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glColor3f
 * Signature: (FFF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glColor3f
  (JNIEnv *, jclass, jfloat, jfloat, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glColor4f
 * Signature: (FFFF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glColor4f
  (JNIEnv *, jclass, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glColor3ub
 * Signature: (BBB)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glColor3ub
  (JNIEnv *, jclass, jbyte, jbyte, jbyte);

/*
 * Class:     jaggl_OpenGL
 * Method:    glColor4ub
 * Signature: (BBBB)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glColor4ub
  (JNIEnv *, jclass, jbyte, jbyte, jbyte, jbyte);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexCoord2i
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexCoord2i
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexCoord3i
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexCoord3i
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexCoord2f
 * Signature: (FF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexCoord2f
  (JNIEnv *, jclass, jfloat, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexCoord3f
 * Signature: (FFF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexCoord3f
  (JNIEnv *, jclass, jfloat, jfloat, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glMultiTexCoord2i
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glMultiTexCoord2i
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glMultiTexCoord3i
 * Signature: (IIII)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glMultiTexCoord3i
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glMultiTexCoord2f
 * Signature: (IFF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glMultiTexCoord2f
  (JNIEnv *, jclass, jint, jfloat, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glRasterPos2i
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glRasterPos2i
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glEnd
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glEnd
  (JNIEnv *, jclass);

/*
 * Class:     jaggl_OpenGL
 * Method:    glEnableClientState
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glEnableClientState
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDisableClientState
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDisableClientState
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glClientActiveTexture
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glClientActiveTexture
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glVertexPointer
 * Signature: (IIIJ)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glVertexPointer
  (JNIEnv *, jclass, jint, jint, jint, jlong);

/*
 * Class:     jaggl_OpenGL
 * Method:    glNormalPointer
 * Signature: (IIJ)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glNormalPointer
  (JNIEnv *, jclass, jint, jint, jlong);

/*
 * Class:     jaggl_OpenGL
 * Method:    glColorPointer
 * Signature: (IIIJ)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glColorPointer
  (JNIEnv *, jclass, jint, jint, jint, jlong);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexCoordPointer
 * Signature: (IIIJ)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexCoordPointer
  (JNIEnv *, jclass, jint, jint, jint, jlong);

/*
 * Class:     jaggl_OpenGL
 * Method:    glVertexAttribPointer
 * Signature: (IIIZIJ)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glVertexAttribPointer
  (JNIEnv *, jclass, jint, jint, jint, jboolean, jint, jlong);

/*
 * Class:     jaggl_OpenGL
 * Method:    glEnableVertexAttribArray
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glEnableVertexAttribArray
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDisableVertexAttribArray
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDisableVertexAttribArray
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glBindAttribLocation
 * Signature: (IILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glBindAttribLocation
  (JNIEnv *, jclass, jint, jint, jstring);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGetAttribLocation
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_jaggl_OpenGL_glGetAttribLocation
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGenBuffersARB
 * Signature: (I[II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glGenBuffersARB
  (JNIEnv *, jclass, jint, jintArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glBindBufferARB
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glBindBufferARB
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glBufferDataARBa
 * Signature: (IIJI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glBufferDataARBa
  (JNIEnv *, jclass, jint, jint, jlong, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glBufferDataARBub
 * Signature: (II[BII)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glBufferDataARBub
  (JNIEnv *, jclass, jint, jint, jbyteArray, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glBufferSubDataARBa
 * Signature: (IIIJ)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glBufferSubDataARBa
  (JNIEnv *, jclass, jint, jint, jint, jlong);

/*
 * Class:     jaggl_OpenGL
 * Method:    glBufferSubDataARBub
 * Signature: (III[BI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glBufferSubDataARBub
  (JNIEnv *, jclass, jint, jint, jint, jbyteArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glMapBufferARB
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_jaggl_OpenGL_glMapBufferARB
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glUnmapBufferARB
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_jaggl_OpenGL_glUnmapBufferARB
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDeleteBuffersARB
 * Signature: (I[II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDeleteBuffersARB
  (JNIEnv *, jclass, jint, jintArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glLineWidth
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glLineWidth
  (JNIEnv *, jclass, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glPointSize
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glPointSize
  (JNIEnv *, jclass, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glPolygonMode
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glPolygonMode
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDrawArrays
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDrawArrays
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDrawElements
 * Signature: (IIIJ)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDrawElements
  (JNIEnv *, jclass, jint, jint, jint, jlong);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGenTextures
 * Signature: (I[II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glGenTextures
  (JNIEnv *, jclass, jint, jintArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDeleteTextures
 * Signature: (I[II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDeleteTextures
  (JNIEnv *, jclass, jint, jintArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glActiveTexture
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glActiveTexture
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glBindTexture
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glBindTexture
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexEnvi
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexEnvi
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexEnvf
 * Signature: (IIF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexEnvf
  (JNIEnv *, jclass, jint, jint, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexEnvfv
 * Signature: (II[FI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexEnvfv
  (JNIEnv *, jclass, jint, jint, jfloatArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexGeni
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexGeni
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexGenfv
 * Signature: (II[FI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexGenfv
  (JNIEnv *, jclass, jint, jint, jfloatArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexParameterf
 * Signature: (IIF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexParameterf
  (JNIEnv *, jclass, jint, jint, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexParameteri
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexParameteri
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGetTexImagei
 * Signature: (IIII[II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glGetTexImagei
  (JNIEnv *, jclass, jint, jint, jint, jint, jintArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGetTexImageub
 * Signature: (IIII[BI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glGetTexImageub
  (JNIEnv *, jclass, jint, jint, jint, jint, jbyteArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGetTexLevelParameterfv
 * Signature: (III)F
 */
JNIEXPORT jfloat JNICALL Java_jaggl_OpenGL_glGetTexLevelParameterfv
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGetTexLevelParameteriv
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_jaggl_OpenGL_glGetTexLevelParameteriv
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGetTexImage
 * Signature: (IIII[B)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glGetTexImage
  (JNIEnv *, jclass, jint, jint, jint, jint, jbyteArray);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexImage1Dub
 * Signature: (IIIIIII[BI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexImage1Dub
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jbyteArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glCopyTexImage2D
 * Signature: (IIIIIIII)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glCopyTexImage2D
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glCopyTexSubImage2D
 * Signature: (IIIIIIII)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glCopyTexSubImage2D
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexImage2Di
 * Signature: (IIIIIIII[II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexImage2Di
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jintArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexImage2Df
 * Signature: (IIIIIIII[FI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexImage2Df
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jfloatArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexImage2Dub
 * Signature: (IIIIIIII[BI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexImage2Dub
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jbyteArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexSubImage2Di
 * Signature: (IIIIIIII[II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexSubImage2Di
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jintArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexSubImage2Df
 * Signature: (IIIIIIII[FI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexSubImage2Df
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jfloatArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexSubImage2Dub
 * Signature: (IIIIIIII[BI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexSubImage2Dub
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jbyteArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glCopyTexSubImage3D
 * Signature: (IIIIIIIII)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glCopyTexSubImage3D
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glTexImage3Dub
 * Signature: (IIIIIIIII[BI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glTexImage3Dub
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jint, jbyteArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glCompressedTexImage2Dub
 * Signature: (IIIIIII[BI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glCompressedTexImage2Dub
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jbyteArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glCopyPixels
 * Signature: (IIIII)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glCopyPixels
  (JNIEnv *, jclass, jint, jint, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glReadPixelsi
 * Signature: (IIIIII[II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glReadPixelsi
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jintArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glReadPixelsub
 * Signature: (IIIIII[BI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glReadPixelsub
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jbyteArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDrawPixelsi
 * Signature: (IIII[II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDrawPixelsi
  (JNIEnv *, jclass, jint, jint, jint, jint, jintArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDrawPixelsub
 * Signature: (IIII[BI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDrawPixelsub
  (JNIEnv *, jclass, jint, jint, jint, jint, jbyteArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glPixelZoom
 * Signature: (FF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glPixelZoom
  (JNIEnv *, jclass, jfloat, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glPixelStorei
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glPixelStorei
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glPixelTransferf
 * Signature: (IF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glPixelTransferf
  (JNIEnv *, jclass, jint, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glColorMaterial
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glColorMaterial
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glLightf
 * Signature: (IIF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glLightf
  (JNIEnv *, jclass, jint, jint, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glLightfv
 * Signature: (II[FI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glLightfv
  (JNIEnv *, jclass, jint, jint, jfloatArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glLightModelfv
 * Signature: (I[FI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glLightModelfv
  (JNIEnv *, jclass, jint, jfloatArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glMaterialfv
 * Signature: (II[FI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glMaterialfv
  (JNIEnv *, jclass, jint, jint, jfloatArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glFogi
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glFogi
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glFogf
 * Signature: (IF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glFogf
  (JNIEnv *, jclass, jint, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glFogfv
 * Signature: (I[FI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glFogfv
  (JNIEnv *, jclass, jint, jfloatArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glBlendFunc
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glBlendFunc
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glBlendFuncSeparate
 * Signature: (IIII)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glBlendFuncSeparate
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glBlendColor
 * Signature: (FFFF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glBlendColor
  (JNIEnv *, jclass, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGenFramebuffersEXT
 * Signature: (I[II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glGenFramebuffersEXT
  (JNIEnv *, jclass, jint, jintArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDeleteFramebuffersEXT
 * Signature: (I[II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDeleteFramebuffersEXT
  (JNIEnv *, jclass, jint, jintArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glBindFramebufferEXT
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glBindFramebufferEXT
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glFramebufferTexture2DEXT
 * Signature: (IIIII)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glFramebufferTexture2DEXT
  (JNIEnv *, jclass, jint, jint, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glFramebufferTexture3DEXT
 * Signature: (IIIIII)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glFramebufferTexture3DEXT
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glFramebufferRenderbufferEXT
 * Signature: (IIII)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glFramebufferRenderbufferEXT
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glCheckFramebufferStatusEXT
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_jaggl_OpenGL_glCheckFramebufferStatusEXT
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glBlitFramebufferEXT
 * Signature: (IIIIIIIIII)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glBlitFramebufferEXT
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGenerateMipmapEXT
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glGenerateMipmapEXT
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGenRenderbuffersEXT
 * Signature: (I[II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glGenRenderbuffersEXT
  (JNIEnv *, jclass, jint, jintArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDeleteRenderbuffersEXT
 * Signature: (I[II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDeleteRenderbuffersEXT
  (JNIEnv *, jclass, jint, jintArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glBindRenderbufferEXT
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glBindRenderbufferEXT
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glRenderbufferStorageEXT
 * Signature: (IIII)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glRenderbufferStorageEXT
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glRenderbufferStorageMultisampleEXT
 * Signature: (IIIII)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glRenderbufferStorageMultisampleEXT
  (JNIEnv *, jclass, jint, jint, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGenProgramARB
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jaggl_OpenGL_glGenProgramARB
  (JNIEnv *, jclass);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDeleteProgramARB
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDeleteProgramARB
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glBindProgramARB
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glBindProgramARB
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glProgramStringARB
 * Signature: (IILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glProgramStringARB
  (JNIEnv *, jclass, jint, jint, jstring);

/*
 * Class:     jaggl_OpenGL
 * Method:    glProgramRawARB
 * Signature: (II[B)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glProgramRawARB
  (JNIEnv *, jclass, jint, jint, jbyteArray);

/*
 * Class:     jaggl_OpenGL
 * Method:    glProgramLocalParameter4fARB
 * Signature: (IIFFFF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glProgramLocalParameter4fARB
  (JNIEnv *, jclass, jint, jint, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glProgramLocalParameter4fvARB
 * Signature: (II[FI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glProgramLocalParameter4fvARB
  (JNIEnv *, jclass, jint, jint, jfloatArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGetProgramivARB
 * Signature: (II[II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glGetProgramivARB
  (JNIEnv *, jclass, jint, jint, jintArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glCreateProgram
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jaggl_OpenGL_glCreateProgram
  (JNIEnv *, jclass);

/*
 * Class:     jaggl_OpenGL
 * Method:    glCreateShader
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_jaggl_OpenGL_glCreateShader
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDeleteProgram
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDeleteProgram
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDeleteShader
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDeleteShader
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glShaderSource
 * Signature: (ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glShaderSource
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     jaggl_OpenGL
 * Method:    glCompileShader
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glCompileShader
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glAttachShader
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glAttachShader
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDetachShader
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDetachShader
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glLinkProgram
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glLinkProgram
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glUseProgram
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glUseProgram
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGetUniformLocation
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_jaggl_OpenGL_glGetUniformLocation
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     jaggl_OpenGL
 * Method:    glUniform1i
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glUniform1i
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glUniform1f
 * Signature: (IF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glUniform1f
  (JNIEnv *, jclass, jint, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glUniform2f
 * Signature: (IFF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glUniform2f
  (JNIEnv *, jclass, jint, jfloat, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glUniform3f
 * Signature: (IFFF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glUniform3f
  (JNIEnv *, jclass, jint, jfloat, jfloat, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glUniform4f
 * Signature: (IFFFF)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glUniform4f
  (JNIEnv *, jclass, jint, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     jaggl_OpenGL
 * Method:    glUniform1fv
 * Signature: (II[FI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glUniform1fv
  (JNIEnv *, jclass, jint, jint, jfloatArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glUniform2fv
 * Signature: (II[FI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glUniform2fv
  (JNIEnv *, jclass, jint, jint, jfloatArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glUniform3fv
 * Signature: (II[FI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glUniform3fv
  (JNIEnv *, jclass, jint, jint, jfloatArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glUniform4fv
 * Signature: (II[FI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glUniform4fv
  (JNIEnv *, jclass, jint, jint, jfloatArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glUniformMatrix2fv
 * Signature: (IIZ[FI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glUniformMatrix2fv
  (JNIEnv *, jclass, jint, jint, jboolean, jfloatArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glUniformMatrix3fv
 * Signature: (IIZ[FI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glUniformMatrix3fv
  (JNIEnv *, jclass, jint, jint, jboolean, jfloatArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glUniformMatrix4fv
 * Signature: (IIZ[FI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glUniformMatrix4fv
  (JNIEnv *, jclass, jint, jint, jboolean, jfloatArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGetProgramiv
 * Signature: (II[II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glGetProgramiv
  (JNIEnv *, jclass, jint, jint, jintArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGetShaderiv
 * Signature: (II[II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glGetShaderiv
  (JNIEnv *, jclass, jint, jint, jintArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGetProgramInfoLog
 * Signature: (II[II[BI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glGetProgramInfoLog
  (JNIEnv *, jclass, jint, jint, jintArray, jint, jbyteArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGetShaderInfoLog
 * Signature: (II[II[BI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glGetShaderInfoLog
  (JNIEnv *, jclass, jint, jint, jintArray, jint, jbyteArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGetError
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_jaggl_OpenGL_glGetError
  (JNIEnv *, jclass);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGetString
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_jaggl_OpenGL_glGetString
  (JNIEnv *, jclass, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGetFloatv
 * Signature: (I[FI)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glGetFloatv
  (JNIEnv *, jclass, jint, jfloatArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glGetIntegerv
 * Signature: (I[II)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glGetIntegerv
  (JNIEnv *, jclass, jint, jintArray, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glStencilFunc
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glStencilFunc
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glStencilOp
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glStencilOp
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glFenceSync
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_jaggl_OpenGL_glFenceSync
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glIsSync
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_jaggl_OpenGL_glIsSync
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jaggl_OpenGL
 * Method:    glDeleteSync
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glDeleteSync
  (JNIEnv *, jclass, jlong);

/*
 * Class:     jaggl_OpenGL
 * Method:    glClientWaitSync
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_jaggl_OpenGL_glClientWaitSync
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     jaggl_OpenGL
 * Method:    glWaitSync
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_jaggl_OpenGL_glWaitSync
  (JNIEnv *, jclass, jlong, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
